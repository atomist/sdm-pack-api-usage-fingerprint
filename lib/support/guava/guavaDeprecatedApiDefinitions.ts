/*
 * Copyright © 2019 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { ApiDefinition } from "../../aspect/model";

export const Guava19DeprecatedApi: ApiDefinition = {
    methods: [
        "com.google.common.collect.UnmodifiableListIterator.add(E)",
        "com.google.common.collect.ImmutableList.add(int, E)",
        "com.google.common.collect.ImmutableList.addAll(int, java.util.Collection)",
        "com.google.common.collect.Range.apply(C)",
        "com.google.common.cache.LoadingCache.apply(K)",
        "com.google.common.collect.ContiguousSet.builder()",
        "com.google.common.collect.ImmutableCollection.clear()",
        "com.google.common.collect.ImmutableMultimap.clear()",
        "com.google.common.collect.ComparisonChain.compare(java.lang.Boolean, java.lang.Boolean)",
        "com.google.common.base.Objects.firstNonNull(T, T)",
        "com.google.common.collect.FluentIterable.from(com.google.common.collect.FluentIterable)",
        "com.google.common.util.concurrent.Futures.get(java.util.concurrent.Future, java.lang.Class)",
        "com.google.common.hash.Hasher.hashCode()",
        "com.google.common.reflect.TypeToken.isAssignableFrom(com.google.common.reflect.TypeToken)",
        "com.google.common.collect.ImmutableSortedMap.Builder.orderEntriesByValue(java.util.Comparator)",
        "com.google.common.collect.ImmutableSortedSet.pollFirst()",
        "com.google.common.collect.ImmutableSortedMap.pollFirstEntry()",
        "com.google.common.collect.ImmutableSortedMultiset.pollLastEntry()",
        "com.google.common.collect.ImmutableMap.put(K, V)",
        "com.google.common.collect.ImmutableTable.put(R, C, V)",
        "com.google.common.collect.ImmutableMap.putAll(java.util.Map)",
        "com.google.common.collect.ImmutableTable.putAll(java.util.Table)",
        "com.google.common.collect.UnmodifiableIterator.remove()",
        "com.google.common.collect.ImmutableMap.remove(java.lang.Object)",
        "com.google.common.collect.ImmutableMultiset.remove(java.lang.Object, int)",
        "com.google.common.collect.ImmutableMultimap.remove(java.lang.Object, java.lang.Object)",
        "com.google.common.collect.ImmutableCollection.removeAll(java.util.Collection)",
        "com.google.common.collect.ImmutableMultimap.removeAll(java.lang.Object)",
        "com.google.common.collect.ImmutableSetMultimap.replaceValues(K, java.util.Iterable)",
        "com.google.common.collect.ImmutableListMultimap.replaceValues(K, java.util.Iterable)",
        "com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor()",
        "com.google.common.collect.ImmutableList.set(int, E)",
        "com.google.common.collect.ImmutableMultiset.setCount(E, int, int)",
        "com.google.common.base.Objects.toStringHelper(Object)",
        "com.google.common.util.concurrent.Futures.transform(com.google.common.util.concurrent.ListenableFuture, com.google.common.util.concurrent.AsyncFunction)",
        "com.google.common.collect.Iterables.unmodifiableIterable(com.google.common.collect.ImmutableCollection)",
        "com.google.common.collect.Multimaps.unmodifiableListMultimap(com.google.common.collect.ImmutableListMultimap)",
        "com.google.common.collect.Multisets.unmodifiableMultiset(com.google.common.collect.ImmutableMultiset)",
        "com.google.common.util.concurrent.Futures.withFallback(com.google.common.util.concurrent.ListenableFuture, com.google.common.util.concurrent.FutureFallback)",
        "com.google.common.io.LittleEndianDataOutputStream.writeBytes(java.lang.String)"],
    classes: [
        "com.google.common.util.concurrent.FutureFallback",
        "com.google.common.io.InputSupplier",
        "com.google.common.collect.MapConstraint",
        "com.google.common.io.OutputSupplier",
        "com.google.common.collect.MapConstraints",
        "com.google.common.base.Objects.ToStringHelper",
    ],
    annotations: [],
};

export const Guava20DeprecatedApi: ApiDefinition = {
    methods: [
        "com.google.common.collect.UnmodifiableListIterator.add(E)",
        "com.google.common.collect.ImmutableList.add(int, E)",
        "com.google.common.collect.ImmutableCollection.addAll(Collection<? extends E>)",
        "com.google.common.collect.ImmutableRangeSet.addAll(RangeSet<C>)",
        "com.google.common.collect.Range.apply(C)",
        "com.google.common.cache.LoadingCache.apply(K)",
        "com.google.common.base.Predicates.assignableFrom(java.lang.Class<?>)",
        "com.google.common.collect.ContiguousSet.builder()",
        "com.google.common.collect.ImmutableCollection.clear()",
        "com.google.common.collect.ImmutableMultimap.clear()",
        "com.google.common.collect.ImmutableTable.clear()",
        "com.google.common.graph.ImmutableGraph.copyOf(ImmutableGraph<N>)",
        "com.google.common.graph.ImmutableValueGraph.copyOf(com.google.common.graph.ImmutableValueGraph<N, V>)",
        "com.google.common.base.Objects.firstNonNull(T, T)",
        "com.google.common.collect.FluentIterable.from(com.google.common.collect.FluentIterable<E>)",
        "com.google.common.net.HostAndPort.getHostText()",
        "com.google.common.math.DoubleMath.mean(double...)",
        "com.google.common.math.DoubleMath.mean(java.util.Iterable<? extends Number>)",
        "com.google.common.math.DoubleMath.mean(long...)",
        "com.google.common.collect.FluentIterable.of(E[])",
        "com.google.common.collect.Iterators.peekingIterator(com.google.common.collect.PeekingIterator<T>)",
        "com.google.common.collect.ImmutableSortedMultiset.pollFirstEntry()",
        "com.google.common.collect.ImmutableSortedSet.pollLast()",
        "com.google.common.collect.ImmutableSortedMap.pollLastEntry()",
        "com.google.common.base.Throwables.propagateIfInstanceOf(java.lang.Throwable, java.lang.Class<X>)",
        "com.google.common.collect.ImmutableMap.put(K, V)",
        "com.google.common.collect.ImmutableRangeMap.put(com.google.common.collect.Range<K>, V)",
        "com.google.common.reflect.ImmutableTypeToInstanceMap.put(TypeToken<? extends B>, B)",
        "com.google.common.collect.ImmutableMultimap.putAll(K, java.lang.Iterable<? extends V>)",
        "com.google.common.reflect.ImmutableTypeToInstanceM…p<? extends TypeToken<? extends B>, ? extends B>)",
        "com.google.common.collect.ImmutableMultimap.putAll(com.google.common.collect.Multimap<? extends K, ? extends V>)",
        "com.google.common.collect.ImmutableTable.putAll(com.google.common.collect.Table<? extends R, ? extends C, ? extends V>)",
        "com.google.common.collect.ImmutableClassToInstanceMap.putInstance(java.lang.Class<T>, T)",
        "com.google.common.collect.UnmodifiableIterator.remove()",
        "com.google.common.collect.ImmutableMap.remove(java.lang.Object)",
        "com.google.common.collect.ImmutableMultiset.remove(java.lang.Object, int)",
        "com.google.common.collect.ImmutableMultimap.remove(java.lang.Object, java.lang.Object)",
        "com.google.common.collect.ImmutableRangeSet.remove(Range<C>)",
        "com.google.common.collect.ImmutableCollection.removeAll(java.util.Collection<?>)",
        "com.google.common.collect.ImmutableMultimap.removeAll(java.lang.Object)",
        "com.google.common.collect.ImmutableRangeSet.removeAll(RangeSet<C>)",
        "com.google.common.collect.ImmutableMultimap.replaceValues(K, Iterable<? extends V>)",
        "com.google.common.collect.ImmutableCollection.retainAll(java.util.Collection<?>)",
        "com.google.common.collect.UnmodifiableListIterator.set(E)",
        "com.google.common.collect.ImmutableMultiset.setCount(E, int)",
        "com.google.common.base.Objects.toStringHelper(java.lang.Class<?>)",
        "com.google.common.base.Objects.toStringHelper(java.lang.String)",
        "com.google.common.collect.Iterators.unmodifiableIterator(com.google.common.collect.UnmodifiableIterator<T>)",
        "com.google.common.collect.Multimaps.unmodifiableMultimap(com.google.common.collect.ImmutableMultimap<K, V>)",
        "com.google.common.collect.Multimaps.unmodifiableSetMultimap(com.google.common.collect.ImmutableSetMultimap<K, V>)",
        "com.google.common.io.ByteArrayDataOutput.writeBytes(java.lang.String)",
    ],
    classes: [
        "com.google.common.base.Objects.ToStringHelper",
        "com.google.common.collect.MapConstraints",
    ],
    annotations: [],
    fields: [
        "com.google.common.base.CharMatcher.ASCII",
        "com.google.common.base.CharMatcher.DIGIT",
        "com.google.common.base.CharMatcher.JAVA_DIGIT",
        "com.google.common.base.CharMatcher.JAVA_LETTER",
        "com.google.common.base.CharMatcher.JAVA_LOWER_CASE",
        "com.google.common.base.CharMatcher.NONE",
        "com.google.common.base.CharMatcher.WHITESPACE",
    ],
};

export const Guava21DeprecatedApi: ApiDefinition = {
    methods: [
        "com.google.common.collect.Sets.SetView.add(E)",
        "com.google.common.collect.ImmutableMultiset.add(E, int)",
        "com.google.common.collect.ImmutableRangeSet.add(Range<C>)",
        "com.google.common.collect.Sets.SetView.addAll(Collection<? extends E>)",
        "com.google.common.collect.ImmutableRangeSet.addAll(Iterable<Range<C>>)",
        "com.google.common.base.Converter.apply(A)",
        "com.google.common.base.CharMatcher.apply(Character)",
        "com.google.common.hash.BloomFilter.apply(T)",
        "com.google.common.collect.Ordering.binarySearch(List<? extends T>, T)",
        "com.google.common.collect.ImmutableMap.clear()",
        "com.google.common.collect.ArrayTable.clear()",
        "com.google.common.collect.Sets.SetView.clear()",
        "com.google.common.collect.ImmutableTable.clear()",
        "com.google.common.collect.ComparisonChain.compare(Boolean, Boolean)",
        "com.google.common.collect.ImmutableMap.computeIfAbsent(K, Function<? super K, ? extends V>)",
        "com.google.common.graph.ImmutableGraph.copyOf(ImmutableGraph<N>)",
        "com.google.common.graph.ImmutableValueGraph.copyOf(ImmutableValueGraph<N, V>)",
        "com.google.common.collect.FluentIterable.from(FluentIterable<E>)",
        "com.google.common.net.HostAndPort.getHostText()",
        "com.google.common.collect.TreeMultimap.keyComparator()",
        "com.google.common.math.DoubleMath.mean(int...)",
        "com.google.common.math.DoubleMath.mean(Iterator<? extends Number>)",
        "com.google.common.collect.ImmutableMap.merge(K, V, BiFunction<? super V, ? super V, ? extends V>)",
        "com.google.common.collect.FluentIterable.of(E[])",
        "com.google.common.collect.Iterators.peekingIterator(PeekingIterator<T>)",
        "com.google.common.collect.ImmutableSortedMultiset.pollFirstEntry()",
        "com.google.common.collect.ImmutableSortedSet.pollLast()",
        "com.google.common.collect.ImmutableSortedMap.pollLastEntry()",
        "com.google.common.base.Throwables.propagateIfInstanceOf(Throwable, Class<X>)",
        "com.google.common.collect.ImmutableMap.put(K, V)",
        "com.google.common.collect.ImmutableRangeMap.put(Range<K>, V)",
        "com.google.common.reflect.ImmutableTypeToInstanceMap.put(TypeToken<? extends B>, B)",
        "com.google.common.collect.ImmutableMultimap.putAll(K, Iterable<? extends V>)",
        "com.google.common.reflect.ImmutableTypeToInstanceM…p<? extends TypeToken<? extends B>, ? extends B>)",
        "com.google.common.collect.ImmutableMultimap.putAll(Multimap<? extends K, ? extends V>)",
        "com.google.common.collect.ImmutableTable.putAll(Table<? extends R, ? extends C, ? extends V>)",
        "com.google.common.reflect.ImmutableTypeToInstanceMap.putInstance(Class<T>, T)",
        "com.google.common.reflect.ImmutableTypeToInstanceMap.putInstance(TypeToken<T>, T)",
        "com.google.common.collect.ImmutableList.remove(int)",
        "com.google.common.collect.ImmutableCollection.remove(Object)",
        "com.google.common.collect.ImmutableMultiset.remove(Object, int)",
        "com.google.common.collect.ArrayTable.remove(Object, Object)",
        "com.google.common.collect.ImmutableTable.remove(Object, Object)",
        "com.google.common.collect.ImmutableRangeMap.remove(Range<K>)",
        "com.google.common.collect.Sets.SetView.removeAll(Collection<?>)",
        "com.google.common.collect.ImmutableSetMultimap.removeAll(Object)",
        "com.google.common.collect.ImmutableListMultimap.removeAll(Object)",
        "com.google.common.collect.ImmutableCollection.removeIf(Predicate<? super E>)",
        "com.google.common.collect.ImmutableMap.replace(K, V)",
        "com.google.common.collect.ImmutableMap.replaceAll(BiFunction<? super K, ? super V, ? extends V>)",
        "com.google.common.collect.ImmutableSetMultimap.replaceValues(K, Iterable<? extends V>)",
        "com.google.common.collect.ImmutableListMultimap.replaceValues(K, Iterable<? extends V>)",
        "com.google.common.collect.Sets.SetView.retainAll(Collection<?>)",
        "com.google.common.collect.UnmodifiableListIterator.set(E)",
        "com.google.common.collect.ImmutableMultiset.setCount(E, int)",
        "com.google.common.collect.ImmutableList.sort(Comparator<? super E>)",
        "com.google.common.base.Equivalence.test(T, T)",
        "com.google.common.collect.Iterables.unmodifiableIterable(ImmutableCollection<E>)",
        "com.google.common.collect.Multimaps.unmodifiableListMultimap(ImmutableListMultimap<K, V>)",
        "com.google.common.collect.Multisets.unmodifiableMultiset(ImmutableMultiset<E>)",
        "com.google.common.io.LittleEndianDataOutputStream.writeBytes(String)",
    ],
    classes: [],
    annotations: [],
    fields: [
        "com.google.common.base.CharMatcher.ASCII",
        "com.google.common.base.CharMatcher.DIGIT",
        "com.google.common.base.CharMatcher.JAVA_DIGIT",
        "com.google.common.base.CharMatcher.JAVA_LETTER",
        "com.google.common.base.CharMatcher.JAVA_LOWER_CASE",
        "com.google.common.base.CharMatcher.NONE",
        "com.google.common.base.CharMatcher.WHITESPACE",
    ],
};

export const Guava22DeprecatedApi: ApiDefinition = {
    methods: [
        "com.google.common.collect.Sets.SetView.add(E)",
        "com.google.common.collect.ImmutableMultiset.add(E, int)",
        "com.google.common.collect.ImmutableRangeSet.add(Range<C>)",
        "com.google.common.collect.Sets.SetView.addAll(Collection<? extends E>)",
        "com.google.common.collect.ImmutableRangeSet.addAll(Iterable<Range<C>>)",
        "com.google.common.util.concurrent.Futures.addCallb…k(ListenableFuture<V>, FutureCallback<? super V>)",
        "com.google.common.base.Converter.apply(A)",
        "com.google.common.base.CharMatcher.apply(Character)",
        "com.google.common.hash.BloomFilter.apply(T)",
        "com.google.common.collect.Ordering.binarySearch(List<? extends T>, T)",
        "com.google.common.util.concurrent.Futures.FutureCombiner.call(Callable<C>)",
        "com.google.common.util.concurrent.TimeLimiter.callWithTimeout(Callable<T>, long, TimeUnit, boolean)",
        "com.google.common.util.concurrent.SimpleTimeLimite…WithTimeout(Callable<T>, long, TimeUnit, boolean)",
        "com.google.common.util.concurrent.Futures.catching… Class<X>, AsyncFunction<? super X, ? extends V>)",
        "com.google.common.collect.ImmutableCollection.clear()",
        "com.google.common.collect.ImmutableMultimap.clear()",
        "com.google.common.collect.ImmutableRangeMap.clear()",
        "com.google.common.collect.TreeBasedTable.columnComparator()",
        "com.google.common.collect.ImmutableMap.compute(K, BiFunction<? super K, ? super V, ? extends V>)",
        "com.google.common.collect.ImmutableMap.computeIfPr…K, BiFunction<? super K, ? super V, ? extends V>)",
        "com.google.common.graph.ImmutableGraph.copyOf(ImmutableGraph<N>)",
        "com.google.common.graph.ImmutableValueGraph.copyOf(ImmutableValueGraph<N, V>)",
        "com.google.common.graph.Graphs.equivalent(Network<?, ?>, Network<?, ?>)",
        "com.google.common.collect.ImmutableBiMap.forcePut(K, V)",
        "com.google.common.collect.Ordering.from(Ordering<T>)",
        "com.google.common.hash.Hasher.hashCode()",
        "com.google.common.util.concurrent.Futures.immediateFailedCheckedFuture(X)",
        "com.google.common.util.concurrent.Futures.makeChec…tenableFuture<V>, Function<? super Exception, X>)",
        "com.google.common.math.DoubleMath.mean(double...)",
        "com.google.common.math.DoubleMath.mean(Iterable<? extends Number>)",
        "com.google.common.math.DoubleMath.mean(long...)",
        "com.google.common.collect.Sets.newSetFromMap(Map<E, Boolean>)",
        "com.google.common.collect.ImmutableSortedMap.Builder.orderEntriesByValue(Comparator<? super V>)",
        "com.google.common.collect.ImmutableSortedSet.pollFirst()",
        "com.google.common.collect.ImmutableSortedMap.pollFirstEntry()",
        "com.google.common.collect.ImmutableSortedMultiset.pollLastEntry()",
        "com.google.common.base.Throwables.propagate(Throwable)",
        "com.google.common.base.Throwables.propagateIfPossible(Throwable)",
        "com.google.common.collect.ImmutableMultimap.put(K, V)",
        "com.google.common.collect.ImmutableTable.put(R, C, V)",
        "com.google.common.reflect.MutableTypeToInstanceMap.put(TypeToken<? extends B>, B)",
        "com.google.common.collect.ImmutableMap.putAll(Map<? extends K, ? extends V>)",
        "com.google.common.reflect.MutableTypeToInstanceMap…p<? extends TypeToken<? extends B>, ? extends B>)",
        "com.google.common.collect.ImmutableRangeMap.putAll(RangeMap<K, V>)",
        "com.google.common.collect.ImmutableRangeMap.putCoalescing(Range<K>, V)",
        "com.google.common.reflect.ImmutableTypeToInstanceMap.putInstance(Class<T>, T)",
        "com.google.common.reflect.ImmutableTypeToInstanceMap.putInstance(TypeToken<T>, T)",
        "com.google.common.io.Files.readFirstLine(File, Charset)",
        "com.google.common.collect.UnmodifiableIterator.remove()",
        "com.google.common.collect.ImmutableMap.remove(Object)",
        "com.google.common.collect.Sets.SetView.remove(Object)",
        "com.google.common.collect.ImmutableMap.remove(Object, Object)",
        "com.google.common.collect.ImmutableMultimap.remove(Object, Object)",
        "com.google.common.collect.ImmutableRangeSet.remove(Range<C>)",
        "com.google.common.collect.ImmutableCollection.removeAll(Collection<?>)",
        "com.google.common.collect.ImmutableRangeSet.removeAll(Iterable<Range<C>>)",
        "com.google.common.collect.ImmutableMultimap.removeAll(Object)",
        "com.google.common.collect.ImmutableRangeSet.removeAll(RangeSet<C>)",
        "com.google.common.collect.Sets.SetView.removeIf(Predicate<? super E>)",
        "com.google.common.collect.ImmutableMap.replace(K, V, V)",
        "com.google.common.collect.ImmutableList.replaceAll(UnaryOperator<E>)",
        "com.google.common.collect.ImmutableMultimap.replaceValues(K, Iterable<? extends V>)",
        "com.google.common.collect.ImmutableCollection.retainAll(Collection<?>)",
        "com.google.common.collect.TreeBasedTable.rowComparator()",
        "com.google.common.collect.ImmutableList.set(int, E)",
        "com.google.common.collect.ImmutableMultiset.setCount(E, int, int)",
        "com.google.common.collect.ImmutableList.sort(Comparator<? super E>)",
        "com.google.common.base.Equivalence.test(T, T)",
        "com.google.common.util.concurrent.Futures.transfor…nableFuture<I>, Function<? super I, ? extends O>)",
        "com.google.common.collect.ArrayListMultimap.trimToSize()",
        "com.google.common.collect.Iterators.unmodifiableIterator(UnmodifiableIterator<T>)",
        "com.google.common.collect.Multimaps.unmodifiableMultimap(ImmutableMultimap<K, V>)",
        "com.google.common.collect.Multimaps.unmodifiableSetMultimap(ImmutableSetMultimap<K, V>)",
        "com.google.common.io.LittleEndianDataOutputStream.writeBytes(String)",
        "com.google.common.util.concurrent.SimpleTimeLimiter(ExecutorService)",
    ],
    classes: [
        "com.google.common.collect.ForwardingBlockingDeque",
        "com.google.common.util.concurrent.ForwardingCheckedFuture",
        "com.google.common.util.concurrent.AbstractCheckedFuture",
        "com.google.common.util.concurrent.CheckedFuture",
        "com.google.common.util.concurrent.ForwardingCheckedFuture.SimpleForwardingCheckedFuture",
    ],
    annotations: [],
    fields: [
        "com.google.common.base.CharMatcher.ASCII",
        "com.google.common.base.CharMatcher.DIGIT",
        "com.google.common.base.CharMatcher.JAVA_DIGIT",
        "com.google.common.base.CharMatcher.JAVA_LETTER",
        "com.google.common.base.CharMatcher.JAVA_LOWER_CASE",
        "com.google.common.base.CharMatcher.NONE",
        "com.google.common.base.CharMatcher.WHITESPACE",
    ],
};

export const Guava23DeprecatedApi: ApiDefinition = {
    methods: [],
    classes: [],
    annotations: [],
};
